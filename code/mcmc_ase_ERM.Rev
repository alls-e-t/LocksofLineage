################################################################################
#
# RevBayes Example: Inferring ancestral states and rates of morphological evolution under an equal rates Markov (ERM) model
#
# authors:  Sebastian HÃ¶hna
#
################################################################################

#######################
# Reading in the Data #
#######################

CHARACTER = "SD"
NUM_STATES = 2

# Import the morphological character matrix #
morpho <- readDiscreteCharacterData("data/"+CHARACTER+"_output_spaces.nex")

# Create some vector for the moves and monitors of this analysis
moves    = VectorMoves()
monitors = VectorMonitors()



##############
# Tree model #
##############

# Here we use a fixed tree topology of mammals on a family level sampling
# Note that the readTrees function always returns a vector of trees,
# so we simple take the first tree
phylogeny <- readTrees("data/pruned_tree.nex")[1]


#########################
# Set up the rate model #
#########################

# we assume every rate i <-> j to be exponentially distributed
rate_pr := phylogeny.treeLength() / 10
mu ~ dnExp(rate_pr)
moves.append( mvScale( mu, weight=2 ) )

# specify the rate matrix
NUM_RATES = NUM_STATES * (NUM_STATES-1)
for ( i in 1:NUM_RATES ) {
    rate[i] := mu
}


##########################
# Set up the rate matrix #
##########################

Q_morpho := fnFreeK( rate, rescale=false )



#####################################
# Set up the root state frequencies #
#####################################

# specify equal priors at the root
rf_prior <- rep(1,NUM_STATES)
rf <- simplex( rf_prior )


###################
# Set up the CTMC #
###################

# Combine all of our elements into a CTMC.

phyMorpho ~ dnPhyloCTMC(tree=phylogeny, Q=Q_morpho, rootFrequencies=rf, type="Standard")
phyMorpho.clamp(morpho)



########
# MCMC #
########

# initialize the model object #
mymodel = model(phylogeny)
# Create a vector of monitors #
# 1. for the full model #
monitors.append( mnModel(filename="output/"+CHARACTER+"_ERM.log", printgen=1) )
# 2. and a few select parameters to be printed to the screen #
monitors.append( mnScreen(printgen=100) )
# 3. add an ancestral state monitor
monitors.append( mnJointConditionalAncestralState(tree=phylogeny,
                                                  ctmc=phyMorpho,
                                                  filename="output/"+CHARACTER+"_ERM.states.txt",
                                                  type="Standard",
                                                  printgen=1,
                                                  withTips=true,
                                                  withStartStates=false) )

# Initialize the MCMC object #
mymcmc = mcmc(mymodel, monitors, moves, nruns=2, combine="mixed")

# Run the MCMC #
mymcmc.run(generations=25000, tuningInterval=200)


# Read in the tree trace and construct the ancestral states (ASE) #
anc_states = readAncestralStateTrace("output/"+CHARACTER+"_ERM.states.txt")
anc_tree = ancestralStateTree(tree=phylogeny, ancestral_state_trace_vector=anc_states, include_start_states=false, file="output/"+CHARACTER+"_ase_ERM.tree", burnin=0.25, summary_statistic="MAP", site=1)

# Quit RevBayes #
q()
